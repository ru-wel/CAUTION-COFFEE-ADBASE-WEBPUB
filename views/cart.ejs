<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CART | CAUTION COFFEE</title>
    <link rel="icon" href="./media/favicon-l.png" type="image/png">

    <!-- STYLE LINKS -->
    <link rel="stylesheet" href="./css/style.css">
    <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:ital,wght@0,400..900;1,400..900&display=swap" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link rel="stylesheet" href="https://unpkg.com/bs-brain@2.0.4/components/testimonials/testimonial-3/assets/css/testimonial-3.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"></link>

</head>

<body>

    <%- include('header.ejs') %>

    <section class="py-3" style="background-color: #f3f3f2; margin-top: 0%; padding-top: 0%;">
        <div class="container h-100">
            <div class="row d-flex justify-content-center align-items-center h-100">
                <div class="col">
                    <p>
                        <span class="h2" style = "font-weight: 900; color: #752329;">Shopping Cart</span>
                    </p>

                    <% if (cart.products && cart.products.length > 0) { %> <!-- CHECK IF MAY REVIEWS BA YUNG USER -->
                        <p><span class="h4">(<%= cart.products.length %> items in your cart)</span></p>
                        <% var total = []%>
                        <% var totalPrice = 0%>

                        <% cart.products.forEach(products => { %>
                            <div class="card mb-4">
                                <div class="card-body p-4">
                                    <div class="row text-center">
                                        <div class="col-md-3">
                                            <p class="small text-muted mb-2">Name</p>
                                            <p class="lead fw-normal mb-0 title"><%= products.product_name %></p>
                                        </div>
                                        <div class="col-md-2">
                                            <p class="small text-muted mb-2">Price</p>
                                            <p class="lead fw-normal mb-0" id="price1">₱ <%= products.price %></p>
                                        </div>
                                        <div class="col-md-2">
                                            <p class="small text-muted mb-2">Quantity</p>
                                            <button class="btn btn-dark minus" hidden>-</button>
                                            <div style="display: inline-block;" class="quantity text-muted"><%= products.quantity %></div>
                                            <button class="btn btn-dark plus" hidden>+</button>
                                            <button class="btn btn-success save" hidden>SAVE</button>
                                        </div>
                                        <div class="col-md-2">
                                            <p class="small text-muted mb-2">Total</p>
                                            <p class="lead fw-normal mb-0" id="total1">₱ <%= products.price * products.quantity %></p>
                                        </div>
                                        <div class="col-md-3">
                                            <p class="small text-muted mb-2">Edit</p>
                                            <div class="d-flex justify-content-center">
                                                <button class="btn btn-outline-secondary me-1 edit" type="button">Edit</button>
                                                <button class="btn btn-outline-danger remove" type="button">Delete</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <% total.push(products.price * products.quantity) %>
                        <% }) %>

                        <% total.forEach(x => { %>
                            <% totalPrice += x; %>
                        <% }) %>

                    <% } else { %>
                            <h2>You Have Nothing on Your Cart!</h2>
                    <% } %>

                    <div class="card mb-5">
                        <div class="card-body p-4">
                            <div class="d-flex justify-content-end align-items-center">
                                <p class="mb-0 d-flex align-items-center">
                                    <span class="small text-muted me-2">Order total:</span>
                                    <span class="lead fw-normal" id="orderTotal">₱<%= totalPrice %></span>
                                </p>
                            </div>
                        </div>
                    </div>
                    
                    <div class="d-flex justify-content-end">
                        <a href="/gear" class="btn btn-dark btn-lg me-2" role="button" style="background-color: #252020; border-color: #252020;">Continue Shopping</a>
                        <button type="button" class="btn btn-primary btn-lg" style="background-color: #752329; border-color: #752329;" id="checkout"><a href="/checkout" style="text-decoration: none; color: #f3f3f2;">Check Out</a></button>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <%- include('footer.ejs') %>

    <script>
        let editButtons = document.getElementsByClassName("edit");
        let plusButtons = document.getElementsByClassName("plus");
        let minusButtons = document.getElementsByClassName("minus");
        let saveButtons = document.getElementsByClassName("save");
        let quantityFields = document.getElementsByClassName("quantity");
        let removeButtons = document.getElementsByClassName("remove");
        let titleFields = document.getElementsByClassName("title");
    
        for (let i = 0; i < editButtons.length; i++) {
            removeButtons[i].addEventListener("click", () => {
                const title = titleFields[i].innerText;
    
                const removeItem = {
                    index: parseInt(i),
                    title: title
                };
    
                fetch('/cart', { // FETCH ROUTE FROM APPLICATION
                    method: 'DELETE',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(removeItem)
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    if (data.success) {
                        alert('Item removed successfully!');
                        location.reload(); // Reload after successful removal
                    } else {
                        alert('Failed to remove item.');
                    }
                })
                .catch(error => {
                    console.error('Error removing product:', error);
                });
            });
    
            editButtons[i].addEventListener("click", () => {
                function updateSaveButtonState(index) {
                    let currentQuantity = parseInt(quantityFields[index].innerText);
                    if (currentQuantity != origQuantity) {
                        saveButtons[index].removeAttribute("hidden");
                    } else {
                        saveButtons[index].setAttribute("hidden", "");
                    }
                }
    
                let origQuantity = parseInt(quantityFields[i].innerText);
    
                minusButtons[i].removeAttribute("hidden");
                plusButtons[i].removeAttribute("hidden");
    
                minusButtons[i].addEventListener("click", () => {
                    let currentQuantity = parseInt(quantityFields[i].innerText);
                    if (currentQuantity > 1) {
                        quantityFields[i].innerText = currentQuantity - 1;
                        updateSaveButtonState(i);
                    }
                });
    
                plusButtons[i].addEventListener("click", () => {
                    let currentQuantity = parseInt(quantityFields[i].innerText);
                    quantityFields[i].innerText = currentQuantity + 1;
                    updateSaveButtonState(i);
                });
    
                saveButtons[i].addEventListener("click", () => {
                    let currentQuantity = parseInt(quantityFields[i].innerText);
    
                    const updateQuantity = {
                        index: parseInt(i),
                        quantity: currentQuantity
                    };
    
                    fetch('/cart', { // FETCH ROUTE FROM APPLICATION
                        method: 'PATCH',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(updateQuantity)
                    })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        return response.json();
                    })
                    .then(data => {
                        if (data.success) {
                            alert('Cart updated successfully!');
                            location.reload();
                        } else {
                            alert('Failed to update cart.');
                        }
                    })
                    .catch(error => {
                        console.error('Error updating cart:', error);
                    });
    
                    saveButtons[i].setAttribute("hidden", "");
                    minusButtons[i].setAttribute("hidden", "");
                    plusButtons[i].setAttribute("hidden", "");
                });
            });    
        }

        if (<%- cart.products && cart.products.length > 0 %> ) { 
            document.getElementById("checkout").removeAttribute("disabled");
        } else {
            document.getElementById("checkout").setAttribute("disabled", "");
        }

        // document.getElementById("checkout").addEventListener("click", () => {
        //     alert("FEATURE NOT AVAILABLE YET SIR HEHE");
        // })

    </script>

    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>

</body>

</html>